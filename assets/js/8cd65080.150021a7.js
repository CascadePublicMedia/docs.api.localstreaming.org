"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[7557],{12290:(e,t,s)=>{s.r(t),s.d(t,{Badge:()=>u,Bullet:()=>o,Details:()=>h,SpecifiedBy:()=>p,assets:()=>c,contentTitle:()=>d,default:()=>y,frontMatter:()=>i,metadata:()=>l,toc:()=>m});var n=s(62540),a=s(43023),r=s(63696);const i={id:"upsert-my-list",title:"upsertMyList"},d=void 0,l={id:"graphql-api/consumer-api/mutations/upsert-my-list",title:"upsertMyList",description:"Creates or updates a my list entry based on the provided viewer and show ID.",source:"@site/docs/graphql-api/consumer-api/mutations/upsert-my-list.mdx",sourceDirName:"graphql-api/consumer-api/mutations",slug:"/graphql-api/consumer-api/mutations/upsert-my-list",permalink:"/graphql-api/consumer-api/mutations/upsert-my-list",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{id:"upsert-my-list",title:"upsertMyList"},sidebar:"graphqlSidebar",previous:{title:"upsertLike",permalink:"/graphql-api/consumer-api/mutations/upsert-like"},next:{title:"upsertWatchHistory",permalink:"/graphql-api/consumer-api/mutations/upsert-watch-history"}},c={},o=()=>(0,n.jsx)(n.Fragment,{children:(0,n.jsx)("span",{style:{fontWeight:"normal",fontSize:".5em",color:"var(--ifm-color-secondary-darkest)"},children:"\xa0\u25cf\xa0"})}),p=e=>(0,n.jsxs)(n.Fragment,{children:["Specification",(0,n.jsx)("a",{className:"link",style:{fontSize:"1.5em",paddingLeft:"4px"},target:"_blank",href:e.url,title:"Specified by "+e.url,children:"\u2398"})]}),u=e=>(0,n.jsx)(n.Fragment,{children:(0,n.jsx)("span",{className:e.class,children:e.text})}),h=({dataOpen:e,dataClose:t,children:s,startOpen:a=!1})=>{const[i,d]=(0,r.useState)(a);return(0,n.jsxs)("details",{...i?{open:!0}:{},className:"details",style:{border:"none",boxShadow:"none",background:"var(--ifm-background-color)"},children:[(0,n.jsx)("summary",{onClick:e=>{e.preventDefault(),d((e=>!e))},style:{listStyle:"none"},children:i?e:t}),i&&s]})},m=[{value:"Arguments",id:"arguments",level:3},{value:'<code>upsertMyList.<b>input</b></code><Bullet></Bullet><code>UpsertMyListInput!</code> <Badge class="badge badge--secondary"></Badge> <Badge class="badge badge--secondary"></Badge> <Badge class="badge badge--secondary"></Badge>',id:"upsertmylistinputupsertmylistinput---",level:4},{value:"Type",id:"type",level:3},{value:'<code>MyList</code> <Badge class="badge badge--secondary"></Badge> <Badge class="badge badge--secondary"></Badge>',id:"mylist--",level:4}];function g(e){const t={a:"a",code:"code",h3:"h3",h4:"h4",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.p,{children:"Creates or updates a my list entry based on the provided viewer and show ID."}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-graphql",children:"upsertMyList(\n  input: UpsertMyListInput!\n): MyList!\n"})}),"\n",(0,n.jsx)(t.h3,{id:"arguments",children:"Arguments"}),"\n",(0,n.jsxs)(t.h4,{id:"upsertmylistinputupsertmylistinput---",children:[(0,n.jsx)(t.a,{href:"#",children:(0,n.jsxs)("code",{style:{fontWeight:"normal"},children:["upsertMyList.",(0,n.jsx)("b",{children:"input"})]})}),(0,n.jsx)(o,{}),(0,n.jsx)(t.a,{href:"/graphql-api/references/inputs/upsert-my-list-input",children:(0,n.jsx)(t.code,{children:"UpsertMyListInput!"})})," ",(0,n.jsx)(u,{class:"badge badge--secondary",text:"non-null"})," ",(0,n.jsx)(u,{class:"badge badge--secondary",text:"input"})," ",(0,n.jsx)(u,{class:"badge badge--secondary",text:"references"})]}),"\n",(0,n.jsx)(t.h3,{id:"type",children:"Type"}),"\n",(0,n.jsxs)(t.h4,{id:"mylist--",children:[(0,n.jsx)(t.a,{href:"/graphql-api/references/objects/my-list",children:(0,n.jsx)(t.code,{children:"MyList"})})," ",(0,n.jsx)(u,{class:"badge badge--secondary",text:"object"})," ",(0,n.jsx)(u,{class:"badge badge--secondary",text:"references"})]}),"\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.code,{children:"Show"}),' "My List" item added by a ',(0,n.jsx)(t.code,{children:"Viewer"}),"."]})]})}function y(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(g,{...e})}):g(e)}},43023:(e,t,s)=>{s.d(t,{R:()=>i,x:()=>d});var n=s(63696);const a={},r=n.createContext(a);function i(e){const t=n.useContext(r);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function d(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:i(e.components),n.createElement(r.Provider,{value:t},e.children)}}}]);